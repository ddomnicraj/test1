name: Terraform Workflow
on: workflow_dispatch
env:
  ARM_CLIENT_ID: ebb5c0b7-b108-4f09-9cbb-ac8fedec0ea7
  ARM_CLIENT_SECRET: rz58Q~5QEu13WWNFFhXui4ezR~tiY3bZG2.kJdqc
  ARM_SUBSCRIPTION_ID: 36255ad7-db1e-4d3b-81cc-d6b30072eee6
  ARM_TENANT_ID: ba2c3b37-5867-4630-8484-e171617286c4
  TF_LOG: TRACE
  working-directory: ./terraform
jobs:
 checkout:
  name: 'checkout'
  runs-on: ubuntu-latest
  steps:
  - name: checkout repository
    uses: actions/checkout@v4
  - run: | 
     pwd
     ls -la
    
 terraform_init:
  name: "Terraform initialization(format,init,validate)"
  runs-on: ubuntu-latest
  needs: checkout 
  steps:
  - name: terraform install
    uses: hashicorp/setup-terraform@v2.0.3

  - run: ls -la
  
  - name: Terraform format
    working-directory: ${{env.working-directory}}
    run: |
     pwd
     ls -la
     terraform fmt
    
  - name: Terraform init
    working-directory: ${{env.working-directory}}
    run: |
     pwd
     terraform init -input=false
    
  - name: Terraform validate
    run: terraform validate
    working-directory: ${{env.working-directory}}
    
 terraform_plan:
  name: 'Terraform Plan (publish)'
  needs: terraform_init
  runs-on: ubuntu-latest
  steps:   
  - name: Terraform plan
    run: echo " Test "
    working-directory: ${{env.working-directory}}

 terraform_apply:
  name: 'Terraform Apply'
  needs: terraform_plan
  runs-on: ubuntu-latest
  steps:   
  - name: Terraform plan
    run: echo " Test "
    working-directory: ${{env.working-directory}}   

 verify_cluster:
  name: 'Verify AKS Cluster'
  needs:
  - terraform_init
  - terraform_plan
  - terraform_apply
  runs-on: ubuntu-latest
  steps:   
  - name: Terraform plan
    run: echo " Test "
    working-directory: ${{env.working-directory}}
